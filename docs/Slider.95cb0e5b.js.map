{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAwDA,IAxCA,IAAA,EAAA,WAaI,SAAA,EAAY,GACH,KAAA,WAAW,GAsBxB,OAnBI,EAAA,UAAA,WAAA,SAAY,GACJ,IAAA,EAAO,EAAM,cAAc,QAC1B,KAAA,SAAW,EAAK,SAAS,MACzB,KAAA,SAAW,EAAK,SAAS,MACzB,KAAA,cAAgB,CAAC,EAAK,YAAY,MAAO,EAAK,YAAY,OAC1D,KAAA,SAAW,EAAK,SAAS,QACzB,KAAA,KAAO,EAAK,KAAK,MACjB,KAAA,YAAc,EAAK,YAAY,QAC/B,KAAA,MAAQ,EAAK,MAAM,QACnB,KAAA,WAAa,EAAK,WAAW,QAC7B,KAAA,YAAc,EAAK,YAAY,QACjC,EAAK,SAAS,GAAG,QACX,KAAA,eAAiB,EAEjB,KAAA,eAAiB,EAErB,KAAA,MAAQ,EAAK,MAAM,QACnB,KAAA,KAAO,EAAK,KAAK,SAE9B,EApCA,GAsCM,EAAoC,SAAS,iBAAiB,eAE3D,EAAA,SAAA,GACC,IAAA,EAAuB,EAAM,cAAc,QAC7C,EAAoB,IAAI,EAAW,GACjC,EAAwB,EAAM,cAAc,WAClD,EAAE,GAAQ,OAAO,GACjB,EAAK,iBAAiB,SAAU,WAC5B,EAAU,IAAI,EAAW,GACzB,EAAE,GAAQ,OAAO,WACjB,EAAE,GAAQ,OAAO,MARP,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAM,CAAf,IAAA,EAAK,EAAA,GAAL,EAAA","file":"Slider.95cb0e5b.js","sourceRoot":"..","sourcesContent":["// $('.slider1').slider();\r\ninterface IOptions {\r\n    minValue: number;\r\n    maxValue: number;\r\n    startingValue: [number, number];\r\n    vertical:boolean;\r\n    step: number;\r\n    moveBySteps: boolean;\r\n    range: boolean;\r\n    rangeInput: boolean;\r\n    valueInputs: boolean;\r\n    handlersAmount: number;\r\n    scale: boolean;\r\n    icon: boolean;\r\n}\r\n\r\nclass NewOptions implements IOptions {\r\n    minValue: number;\r\n    maxValue: number;\r\n    startingValue: [number, number];\r\n    vertical: boolean;\r\n    step: number;\r\n    moveBySteps: boolean;\r\n    range: boolean;\r\n    rangeInput: boolean;\r\n    valueInputs: boolean;\r\n    handlersAmount: number;\r\n    scale: boolean;\r\n    icon: boolean;\r\n    constructor(block:HTMLDivElement) {\r\n        this.getOptions(block);\r\n    }\r\n\r\n    getOptions (block:HTMLDivElement):void {\r\n        let form = block.querySelector('form');\r\n        this.minValue = form.minValue.value;\r\n        this.maxValue = form.maxValue.value;\r\n        this.startingValue = [form.startValue1.value, form.startValue2.value];\r\n        this.vertical = form.vertical.checked;\r\n        this.step = form.step.value;\r\n        this.moveBySteps = form.moveBySteps.checked;\r\n        this.range = form.range.checked;\r\n        this.rangeInput = form.rangeInput.checked;\r\n        this.valueInputs = form.valueInputs.checked;\r\n        if(form.handlers[1].checked){\r\n            this.handlersAmount = 2;\r\n        } else{\r\n            this.handlersAmount = 1;\r\n        }\r\n        this.scale = form.scale.checked;\r\n        this.icon = form.icon.checked; \r\n    }\r\n}\r\n\r\nconst blocks:NodeListOf<HTMLDivElement> = document.querySelectorAll('.demo-block');\r\n\r\nfor (let block of blocks) {\r\n    const form:HTMLFormElement = block.querySelector('form');\r\n    let options: IOptions = new NewOptions(block);\r\n    const slider:HTMLDivElement = block.querySelector('.slider');\r\n    $(slider).slider(options);\r\n    form.addEventListener('change', () => {\r\n        options = new NewOptions(block);\r\n        $(slider).slider('destroy');\r\n        $(slider).slider(options);\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}