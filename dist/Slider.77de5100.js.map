{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAgBA,IAAA,UAAA;AAAA;AAAA,YAAA;AAaI,WAAA,UAAA,CAAY,KAAZ,EAAgC;AAC5B,SAAK,UAAL,CAAgB,KAAhB,EAD4B,CAE5B;AACH;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAY,KAAZ,EAAgC;AAC5B,QAAI,IAAI,GAAG,KAAK,CAAC,aAAN,CAAoB,MAApB,CAAX;AACA,SAAK,QAAL,GAAgB,IAAI,CAAC,QAAL,CAAc,KAA9B;AACA,SAAK,QAAL,GAAgB,IAAI,CAAC,QAAL,CAAc,KAA9B;AACA,SAAK,aAAL,GAAqB,CAAC,IAAI,CAAC,WAAL,CAAiB,KAAlB,EAAyB,IAAI,CAAC,WAAL,CAAiB,KAA1C,CAArB;AACA,SAAK,QAAL,GAAgB,IAAI,CAAC,QAAL,CAAc,OAA9B;AACA,SAAK,IAAL,GAAY,IAAI,CAAC,IAAL,CAAU,KAAtB;AACA,SAAK,WAAL,GAAmB,IAAI,CAAC,WAAL,CAAiB,OAApC;AACA,SAAK,KAAL,GAAa,IAAI,CAAC,KAAL,CAAW,OAAxB;AACA,SAAK,UAAL,GAAkB,IAAI,CAAC,UAAL,CAAgB,OAAlC;AACA,SAAK,WAAL,GAAmB,IAAI,CAAC,WAAL,CAAiB,OAApC;;AACA,QAAG,IAAI,CAAC,QAAL,CAAc,CAAd,EAAiB,OAApB,EAA4B;AACxB,WAAK,cAAL,GAAsB,CAAtB;AACH,KAFD,MAEM;AACF,WAAK,cAAL,GAAsB,CAAtB;AACH;;AACD,SAAK,KAAL,GAAa,IAAI,CAAC,KAAL,CAAW,OAAxB;AACA,SAAK,IAAL,GAAY,IAAI,CAAC,IAAL,CAAU,OAAtB;AACH,GAlBD;;AAoBA,EAAA,UAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAkB,KAAlB,EAAsC;AAAtC,QAAA,KAAA,GAAA,IAAA;;AACI,QAAM,IAAI,GAAG,KAAK,CAAC,aAAN,CAAoB,MAApB,CAAb;AACA,IAAA,IAAI,CAAC,gBAAL,CAAsB,QAAtB,EAAgC,YAAA;AAC5B,MAAA,OAAO,CAAC,GAAR,CAAY,cAAZ;;AACA,MAAA,KAAI,CAAC,UAAL,CAAgB,KAAhB;AACH,KAHD;AAIH,GAND;;AAOJ,SAAA,UAAA;AA7CA,CAAA,EAAA;;AA+CA,IAAM,MAAM,GAA8B,QAAQ,CAAC,gBAAT,CAA0B,aAA1B,CAA1C;;+BACS,OAAK;AACV,MAAM,IAAI,GAAG,KAAK,CAAC,aAAN,CAAoB,MAApB,CAAb;AACA,MAAI,OAAO,GAAW,IAAI,UAAJ,CAAe,KAAf,CAAtB;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,aAAN,CAAoB,SAApB,CAAf;AACA,EAAA,CAAC,CAAC,MAAD,CAAD,CAAU,MAAV,CAAiB,OAAjB;AACA,EAAA,IAAI,CAAC,gBAAL,CAAsB,QAAtB,EAAgC,YAAA;AAC5B,IAAA,OAAO,GAAG,IAAI,UAAJ,CAAe,KAAf,CAAV;AACA,IAAA,CAAC,CAAC,MAAD,CAAD,CAAU,MAAV,CAAiB,SAAjB;AACA,IAAA,CAAC,CAAC,MAAD,CAAD,CAAU,MAAV,CAAiB,OAAjB;AACH,GAJD;;;AALJ,KAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,QAAA,GAAA,MAAlB,EAAkB,EAAA,GAAA,QAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAAwB;AAAnB,MAAI,KAAK,GAAA,QAAA,CAAA,EAAA,CAAT;;UAAI;AAUR","file":"Slider.77de5100.js","sourceRoot":"..","sourcesContent":["\r\ninterface IOptions {\r\n    minValue: number;\r\n    maxValue: number;\r\n    startingValue: [number, number];\r\n    vertical:boolean;\r\n    step: number;\r\n    moveBySteps: boolean;\r\n    range: boolean;\r\n    rangeInput: boolean;\r\n    valueInputs: boolean;\r\n    handlersAmount: number;\r\n    scale: boolean;\r\n    icon: boolean;\r\n}\r\n\r\nclass NewOptions implements IOptions {\r\n    minValue: number;\r\n    maxValue: number;\r\n    startingValue: [number, number];\r\n    vertical: boolean;\r\n    step: number;\r\n    moveBySteps: boolean;\r\n    range: boolean;\r\n    rangeInput: boolean;\r\n    valueInputs: boolean;\r\n    handlersAmount: number;\r\n    scale: boolean;\r\n    icon: boolean;\r\n    constructor(block:HTMLDivElement) {\r\n        this.getOptions(block);\r\n        // this.getChangedOptios(block);\r\n    }\r\n\r\n    getOptions (block:HTMLDivElement):void {\r\n        let form = block.querySelector('form');\r\n        this.minValue = form.minValue.value;\r\n        this.maxValue = form.maxValue.value;\r\n        this.startingValue = [form.startValue1.value, form.startValue2.value];\r\n        this.vertical = form.vertical.checked;\r\n        this.step = form.step.value;\r\n        this.moveBySteps = form.moveBySteps.checked;\r\n        this.range = form.range.checked;\r\n        this.rangeInput = form.rangeInput.checked;\r\n        this.valueInputs = form.valueInputs.checked;\r\n        if(form.handlers[1].checked){\r\n            this.handlersAmount = 2;\r\n        } else{\r\n            this.handlersAmount = 1;\r\n        }\r\n        this.scale = form.scale.checked;\r\n        this.icon = form.icon.checked; \r\n    }\r\n\r\n    getChangedOptios (block:HTMLDivElement)  {\r\n        const form = block.querySelector('form');\r\n        form.addEventListener('change', () => {\r\n            console.log('form changed');\r\n            this.getOptions(block);\r\n        })\r\n    }\r\n}\r\n\r\nconst blocks:NodeListOf<HTMLDivElement> = document.querySelectorAll('.demo-block');\r\nfor (let block of blocks) {\r\n    const form = block.querySelector('form');\r\n    let options: Object = new NewOptions(block);\r\n    const slider = block.querySelector('.slider');\r\n    $(slider).slider(options);\r\n    form.addEventListener('change', () => {\r\n        options = new NewOptions(block);\r\n        $(slider).slider('destroy');\r\n        $(slider).slider(options);\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}